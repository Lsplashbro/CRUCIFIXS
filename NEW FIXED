--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.10) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v82 = v2(v0(v30, 16));
				if v19 then
					local v92 = v5(v82, v19);
					v19 = nil;
					return v92;
				else
					return v82;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v83 = 0 - (0 + 0);
				local v84;
				while true do
					if (v83 == (0 + 0)) then
						v84 = (v31 / ((5 - 3) ^ (v32 - (1 + 0)))) % ((3 - 1) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + 64)))) + (932 - (857 + 74))));
						return v84 - (v84 % (1 - 0));
					end
				end
			else
				local v85 = (1067 - (68 + 997)) ^ (v32 - (1271 - (226 + 1044)));
				return (((v31 % (v85 + v85)) >= v85) and (569 - ((1324 - (892 + 65)) + 201))) or (927 - (214 + 713));
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35, v36 = v1(v16, v18, v18 + 2);
			v18 = v18 + (4 - 2);
			return (v36 * (472 - 216)) + v35;
		end
		local function v23()
			local v37, v38, v39, v40 = v1(v16, v18, v18 + (4 - 1));
			v18 = v18 + (354 - (87 + 263));
			return (v40 * (16777396 - (67 + 113))) + (v39 * (48056 + 12856 + 4624)) + (v38 * (628 - 372)) + v37;
		end
		local function v24()
			local v41 = 0 - 0;
			local v42;
			local v43;
			local v44;
			local v45;
			local v46;
			local v47;
			while true do
				if (v41 == 0) then
					v42 = v23();
					v43 = v23();
					v41 = 953 - (802 + 150);
				end
				if (v41 == (7 - 4)) then
					if (v46 == (430 - (44 + 386))) then
						if (v45 == (0 - (1486 - (998 + 488)))) then
							return v47 * (0 + 0);
						else
							local v101 = 997 - (915 + 82);
							while true do
								if (v101 == (0 - (0 + 0))) then
									v46 = 1 + 0 + 0;
									v44 = 0 - 0;
									break;
								end
							end
						end
					elseif (v46 == (3234 - ((1841 - (201 + 571)) + 118))) then
						return ((v45 == (0 - 0)) and (v47 * (1 / (0 - 0)))) or (v47 * NaN);
					end
					return v8(v47, v46 - (178 + 845)) * (v44 + (v45 / (2 ^ (92 - 40))));
				end
				if (v41 == (2 + 0)) then
					v46 = v20(v43, 812 - (368 + 423), 97 - 66);
					v47 = ((v20(v43, 50 - (10 + 8)) == (3 - 2)) and -1) or 1;
					v41 = 1141 - (116 + 1022);
				end
				if (v41 == (443 - (416 + 26))) then
					v44 = 1;
					v45 = (v20(v43, 3 - 2, 9 + 11) * ((3 - 1) ^ (470 - (145 + 293)))) + v42;
					v41 = 2;
				end
			end
		end
		local function v25(v48)
			local v49;
			if not v48 then
				local v86 = 0 - 0;
				while true do
					if (v86 == (0 + 0)) then
						v48 = v23();
						if (v48 == (0 - 0)) then
							return "";
						end
						break;
					end
				end
			end
			v49 = v3(v16, v18, (v18 + v48) - (1 + 0));
			v18 = v18 + v48;
			local v50 = {};
			for v66 = 1 + 0, #v49 do
				v50[v66] = v2(v1(v3(v49, v66, v66)));
			end
			return v6(v50);
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v51 = 0 + 0;
			local v52;
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			while true do
				if (v51 == (2 - 1)) then
					local v89 = 0;
					while true do
						if (v89 ~= 1) then
						else
							v51 = 605 - (268 + 335);
							break;
						end
						if (v89 ~= (290 - (60 + 230))) then
						else
							v54 = nil;
							v55 = nil;
							v89 = 1;
						end
					end
				end
				if ((572 - (426 + 146)) ~= v51) then
				else
					local v90 = 0 + 0;
					while true do
						if ((1457 - (282 + 1174)) == v90) then
							v51 = 812 - (569 + 242);
							break;
						end
						if (v90 == (0 - 0)) then
							v52 = 0 + 0;
							v53 = nil;
							v90 = 1025 - (706 + 318);
						end
					end
				end
				if (v51 == 2) then
					local v91 = 1251 - (721 + 530);
					while true do
						if (v91 == 1) then
							v51 = 1274 - (945 + 326);
							break;
						end
						if (v91 == 0) then
							v56 = nil;
							v57 = nil;
							v91 = 1;
						end
					end
				end
				if (v51 == (7 - 4)) then
					v58 = nil;
					v59 = nil;
					v51 = 4 + 0;
				end
				if (v51 == (704 - (271 + 429))) then
					while true do
						if (v52 ~= 2) then
						else
							v57 = nil;
							v58 = nil;
							v52 = 3 + 0;
						end
						if (v52 == (1501 - (1408 + 92))) then
							local v99 = 0;
							while true do
								if (v99 == (1087 - (461 + 625))) then
									v52 = 1290 - (993 + 295);
									break;
								end
								if (v99 == (0 + 0)) then
									v55 = nil;
									v56 = nil;
									v99 = 1172 - (418 + 753);
								end
							end
						end
						if (v52 == 0) then
							local v100 = 0;
							while true do
								if (0 ~= v100) then
								else
									v53 = 0 + 0;
									v54 = nil;
									v100 = 1;
								end
								if (v100 == 1) then
									v52 = 1 + 0;
									break;
								end
							end
						end
						if (v52 == 3) then
							v59 = nil;
							while true do
								local v102 = 0 + 0;
								while true do
									if (v102 == (0 + 0)) then
										if (v53 == (532 - (406 + 123))) then
											local v103 = 0;
											local v104;
											while true do
												if ((1769 - (1749 + 20)) == v103) then
													v104 = 0 + 0;
													while true do
														if (v104 == (1322 - (1249 + 73))) then
															local v176 = 0 + 0;
															while true do
																if (v176 == (1145 - (466 + 679))) then
																	for v833 = 2 - 1, v23() do
																		v55[v833 - 1] = v28();
																	end
																	return v57;
																end
															end
														end
													end
													break;
												end
											end
										end
										if (v53 ~= (5 - 3)) then
										else
											local v105 = 0;
											while true do
												if ((1901 - (106 + 1794)) == v105) then
													for v112 = 1 + 0, v23() do
														local v113 = 0;
														local v114;
														local v115;
														local v116;
														while true do
															if (0 == v113) then
																local v179 = 0;
																while true do
																	if (v179 == 0) then
																		v114 = 0 + 0;
																		v115 = nil;
																		v179 = 1;
																	end
																	if (v179 ~= 1) then
																	else
																		v113 = 2 - 1;
																		break;
																	end
																end
															end
															if (v113 ~= 1) then
															else
																v116 = nil;
																while true do
																	if (v114 == 1) then
																		while true do
																			if (v115 ~= 0) then
																			else
																				v116 = v21();
																				if (v20(v116, 2 - 1, 115 - (4 + 110)) == 0) then
																					local v1948 = 0;
																					local v1949;
																					local v1950;
																					local v1951;
																					local v1952;
																					local v1953;
																					while true do
																						if (v1948 == (585 - (57 + 527))) then
																							v1951 = nil;
																							v1952 = nil;
																							v1948 = 1429 - (41 + 1386);
																						end
																						if (v1948 == (105 - (17 + 86))) then
																							v1953 = nil;
																							while true do
																								if (v1949 == (2 + 0)) then
																									while true do
																										if (v1950 == (3 - 1)) then
																											local v1966 = 0;
																											local v1967;
																											while true do
																												if (v1966 == 0) then
																													v1967 = 0 - 0;
																													while true do
																														if (v1967 ~= (166 - (122 + 44))) then
																														else
																															if (v20(v1952, 1, 1) ~= 1) then
																															else
																																v1953[2] = v59[v1953[2 - 0]];
																															end
																															if (v20(v1952, 2, 2) == 1) then
																																v1953[3] = v59[v1953[9 - 6]];
																															end
																															v1967 = 1;
																														end
																														if (1 == v1967) then
																															v1950 = 3;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										if (v1950 ~= 3) then
																										else
																											if (v20(v1952, 3, 3) ~= (1 + 0)) then
																											else
																												v1953[4] = v59[v1953[4]];
																											end
																											v54[v112] = v1953;
																											break;
																										end
																										if (v1950 == 1) then
																											local v1969 = 0 + 0;
																											local v1970;
																											while true do
																												if (v1969 == (0 - 0)) then
																													v1970 = 65 - (30 + 35);
																													while true do
																														if (v1970 ~= 1) then
																														else
																															v1950 = 2 + 0;
																															break;
																														end
																														if (v1970 ~= (1257 - (1043 + 214))) then
																														else
																															local v1976 = 0;
																															while true do
																																if (v1976 == (0 - 0)) then
																																	v1953 = {v22(),v22(),nil,nil};
																																	if (v1951 == (320 - (53 + 267))) then
																																		local v1982 = 0 + 0;
																																		local v1983;
																																		local v1984;
																																		local v1985;
																																		while true do
																																			if (v1982 ~= (413 - (15 + 398))) then
																																			else
																																				v1983 = 0;
																																				v1984 = nil;
																																				v1982 = 1;
																																			end
																																			if ((983 - (18 + 964)) ~= v1982) then
																																			else
																																				v1985 = nil;
																																				while true do
																																					if (v1983 == 1) then
																																						while true do
																																							if (v1984 == 0) then
																																								v1985 = 0;
																																								while true do
																																									if (v1985 == 0) then
																																										v1953[3] = v22();
																																										v1953[4] = v22();
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v1983 == 0) then
																																						local v1988 = 0 - 0;
																																						while true do
																																							if (v1988 == (1 + 0)) then
																																								v1983 = 1;
																																								break;
																																							end
																																							if ((0 + 0) == v1988) then
																																								v1984 = 850 - (20 + 830);
																																								v1985 = nil;
																																								v1988 = 1 + 0;
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v1951 == 1) then
																																		v1953[129 - (116 + 10)] = v23();
																																	elseif (v1951 == (1 + 1)) then
																																		v1953[741 - (542 + 196)] = v23() - (2 ^ 16);
																																	elseif (v1951 == (6 - 3)) then
																																		local v1989 = 0;
																																		local v1990;
																																		local v1991;
																																		while true do
																																			if (v1989 ~= (0 + 0)) then
																																			else
																																				v1990 = 0;
																																				v1991 = nil;
																																				v1989 = 1 + 0;
																																			end
																																			if (v1989 == 1) then
																																				while true do
																																					if (v1990 ~= (0 + 0)) then
																																					else
																																						v1991 = 0;
																																						while true do
																																							if (v1991 == 0) then
																																								v1953[7 - 4] = v23() - (2 ^ (40 - 24));
																																								v1953[4] = v22();
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v1976 = 1;
																																end
																																if (v1976 == 1) then
																																	v1970 = 1552 - (1126 + 425);
																																	break;
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																										end
																										if (v1950 == (405 - (118 + 287))) then
																											local v1971 = 0 - 0;
																											local v1972;
																											local v1973;
																											while true do
																												if (v1971 ~= (1122 - (118 + 1003))) then
																												else
																													while true do
																														if (v1972 ~= 0) then
																														else
																															v1973 = 0;
																															while true do
																																if (v1973 == 1) then
																																	v1950 = 1;
																																	break;
																																end
																																if (v1973 == (0 - 0)) then
																																	local v1981 = 0;
																																	while true do
																																		if ((378 - (142 + 235)) ~= v1981) then
																																		else
																																			v1973 = 1;
																																			break;
																																		end
																																		if (v1981 == 0) then
																																			v1951 = v20(v116, 9 - 7, 1 + 2);
																																			v1952 = v20(v116, 4, 6);
																																			v1981 = 1;
																																		end
																																	end
																																end
																															end
																															break;
																														end
																													end
																													break;
																												end
																												if (v1971 ~= 0) then
																												else
																													v1972 = 0;
																													v1973 = nil;
																													v1971 = 1;
																												end
																											end
																										end
																									end
																									break;
																								end
																								if (v1949 == (977 - (553 + 424))) then
																									v1950 = 0 - 0;
																									v1951 = nil;
																									v1949 = 1 + 0;
																								end
																								if ((1 + 0) ~= v1949) then
																								else
																									v1952 = nil;
																									v1953 = nil;
																									v1949 = 2;
																								end
																							end
																							break;
																						end
																						if (v1948 == (0 + 0)) then
																							v1949 = 0 + 0;
																							v1950 = nil;
																							v1948 = 1 + 0;
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (v114 ~= (0 - 0)) then
																	else
																		local v835 = 0;
																		local v836;
																		while true do
																			if (v835 == 0) then
																				v836 = 0 - 0;
																				while true do
																					if (v836 == (0 - 0)) then
																						local v1956 = 0 + 0;
																						while true do
																							if (v1956 ~= 1) then
																							else
																								v836 = 1;
																								break;
																							end
																							if (v1956 ~= 0) then
																							else
																								v115 = 0;
																								v116 = nil;
																								v1956 = 4 - 3;
																							end
																						end
																					end
																					if (v836 == (754 - (239 + 514))) then
																						v114 = 1;
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
													end
													v53 = 3;
													break;
												end
												if (v105 == 0) then
													local v108 = 0;
													while true do
														if (v108 == 0) then
															for v180 = 1 + 0, v58 do
																local v181 = 0;
																local v182;
																local v183;
																local v184;
																local v185;
																while true do
																	if (v181 ~= (1329 - (797 + 532))) then
																	else
																		v182 = 0 + 0;
																		v183 = nil;
																		v181 = 1;
																	end
																	if (v181 ~= (1 + 0)) then
																	else
																		v184 = nil;
																		v185 = nil;
																		v181 = 4 - 2;
																	end
																	if (v181 == (1204 - (373 + 829))) then
																		while true do
																			if (v182 ~= 1) then
																			else
																				v185 = nil;
																				while true do
																					if (v183 ~= 0) then
																					else
																						local v1957 = 731 - (476 + 255);
																						while true do
																							if (1 ~= v1957) then
																							else
																								v183 = 1;
																								break;
																							end
																							if (v1957 == 0) then
																								local v1964 = 1130 - (369 + 761);
																								while true do
																									if (v1964 ~= 1) then
																									else
																										v1957 = 1;
																										break;
																									end
																									if (v1964 == (0 + 0)) then
																										local v1965 = 0 - 0;
																										while true do
																											if (v1965 == (1 - 0)) then
																												v1964 = 239 - (64 + 174);
																												break;
																											end
																											if (v1965 == (0 + 0)) then
																												v184 = v21();
																												v185 = nil;
																												v1965 = 1 - 0;
																											end
																										end
																									end
																								end
																							end
																						end
																					end
																					if (v183 ~= (337 - (144 + 192))) then
																					else
																						if (v184 == (217 - (42 + 174))) then
																							v185 = v21() ~= 0;
																						elseif (v184 == (2 + 0)) then
																							v185 = v24();
																						elseif (v184 == (3 + 0)) then
																							v185 = v25();
																						end
																						v59[v180] = v185;
																						break;
																					end
																				end
																				break;
																			end
																			if (v182 == 0) then
																				v183 = 0 + 0;
																				v184 = nil;
																				v182 = 1505 - (363 + 1141);
																			end
																		end
																		break;
																	end
																end
															end
															v57[1583 - (1183 + 397)] = v21();
															v108 = 2 - 1;
														end
														if (v108 == (1 + 0)) then
															v105 = 1 + 0;
															break;
														end
													end
												end
											end
										end
										v102 = 1976 - (1913 + 62);
									end
									if ((1 + 0) == v102) then
										if (v53 ~= (2 - 1)) then
										else
											local v106 = 1933 - (565 + 1368);
											while true do
												if (v106 == 0) then
													local v109 = 0 - 0;
													while true do
														if (v109 == 1) then
															v106 = 1;
															break;
														end
														if (v109 == (1661 - (1477 + 184))) then
															v57 = {v54,v55,nil,v56};
															v58 = v23();
															v109 = 857 - (564 + 292);
														end
													end
												end
												if (v106 == (1 - 0)) then
													v59 = {};
													v53 = 2;
													break;
												end
											end
										end
										if (v53 == (0 - 0)) then
											local v107 = 304 - (244 + 60);
											while true do
												if (v107 ~= (1 + 0)) then
												else
													v56 = {};
													v53 = 1;
													break;
												end
												if (v107 == 0) then
													local v110 = 0;
													local v111;
													while true do
														if (v110 == (476 - (41 + 435))) then
															v111 = 1001 - (938 + 63);
															while true do
																if (v111 == 1) then
																	v107 = 1;
																	break;
																end
																if (v111 ~= 0) then
																else
																	local v812 = 0 + 0;
																	while true do
																		if (v812 == 0) then
																			v54 = {};
																			v55 = {};
																			v812 = 1;
																		end
																		if ((1126 - (936 + 189)) ~= v812) then
																		else
																			v111 = 1;
																			break;
																		end
																	end
																end
															end
															break;
														end
													end
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
					break;
				end
			end
		end
		local function v29(v60, v61, v62)
			local v63 = v60[1];
			local v64 = v60[2];
			local v65 = v60[3];
			return function(...)
				local v68 = v63;
				local v69 = v64;
				local v70 = v65;
				local v71 = v27;
				local v72 = 1;
				local v73 = -1;
				local v74 = {};
				local v75 = {...};
				local v76 = v12("#", ...) - 1;
				local v77 = {};
				local v78 = {};
				for v87 = 0, v76 do
					if (v87 >= v70) then
						v74[v87 - v70] = v75[v87 + 1];
					else
						v78[v87] = v75[v87 + 1];
					end
				end
				local v79 = (v76 - v70) + 1;
				local v80;
				local v81;
				while true do
					local v88 = 0;
					while true do
						if (v88 == 0) then
							v80 = v68[v72];
							v81 = v80[1];
							v88 = 1;
						end
						if (v88 == 1) then
							if (v81 <= 56) then
								if (v81 <= 27) then
									if (v81 <= 13) then
										if (v81 <= 6) then
											if (v81 <= 2) then
												if (v81 <= 0) then
													local v117 = 0;
													while true do
														if (v117 == 3) then
															v78[v80[2]] = v80[3];
															v72 = v72 + 1;
															v80 = v68[v72];
															v117 = 4;
														end
														if (v117 == 2) then
															v78[v80[2]][v80[3]] = v80[4];
															v72 = v72 + 1;
															v80 = v68[v72];
															v117 = 3;
														end
														if (4 == v117) then
															v72 = v80[3];
															break;
														end
														if (v117 == 1) then
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v117 = 2;
														end
														if (v117 == 0) then
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v117 = 1;
														end
													end
												elseif (v81 == 1) then
													local v186 = 0;
													local v187;
													local v188;
													while true do
														if (v186 == 3) then
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v62[v80[3]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v186 = 4;
														end
														if (v186 == 4) then
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v80[3];
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v62[v80[3]];
															v186 = 5;
														end
														if (v186 == 5) then
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v186 = 6;
														end
														if (v186 == 6) then
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v62[v80[3]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v186 = 7;
														end
														if (v186 == 12) then
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v80[3];
															v72 = v72 + 1;
															v80 = v68[v72];
															v72 = v80[3];
															break;
														end
														if (v186 == 1) then
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v61[v80[3]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v186 = 2;
														end
														if (v186 == 8) then
															v78[v188] = v78[v188](v13(v78, v188 + 1, v80[3]));
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = {};
															v72 = v72 + 1;
															v80 = v68[v72];
															v186 = 9;
														end
														if (11 == v186) then
															v78[v188 + 1] = v187;
															v78[v188] = v187[v80[4]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v188 = v80[2];
															v78[v188](v78[v188 + 1]);
															v186 = 12;
														end
														if (v186 == 7) then
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v188 = v80[2];
															v186 = 8;
														end
														if (v186 == 0) then
															v187 = nil;
															v188 = nil;
															v188 = v80[2];
															v187 = v78[v80[3]];
															v78[v188 + 1] = v187;
															v78[v188] = v187[v80[4]];
															v186 = 1;
														end
														if (10 == v186) then
															v188 = v80[2];
															v78[v188] = v78[v188](v13(v78, v188 + 1, v80[3]));
															v72 = v72 + 1;
															v80 = v68[v72];
															v188 = v80[2];
															v187 = v78[v80[3]];
															v186 = 11;
														end
														if (v186 == 9) then
															v78[v80[2]][v80[3]] = v80[4];
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]][v80[3]] = v80[4];
															v72 = v72 + 1;
															v80 = v68[v72];
															v186 = 10;
														end
														if (v186 == 2) then
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v72 = v72 + 1;
															v80 = v68[v72];
															v78[v80[2]] = v78[v80[3]][v80[4]];
															v186 = 3;
														end
													end
												else
													local v189 = 0;
													local v190;
													while true do
														if (v189 == 0) then
															v190 = v80[2];
															do
																return v78[v190], v78[v190 + 1];
															end
															break;
														end
													end
												end
											elseif (v81 <= 4) then
												if (v81 == 3) then
													v78[v80[2]] = v78[v80[3]];
												else
													local v193;
													local v194;
													local v193, v195;
													local v196;
													local v197;
													v197 = v80[2];
													v196 = v78[v80[3]];
													v78[v197 + 1] = v196;
													v78[v197] = v196[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v78[v197] = v78[v197](v13(v78, v197 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = {};
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v80[4];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v80[4];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v78[v197] = v78[v197](v13(v78, v197 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v196 = v78[v80[3]];
													v78[v197 + 1] = v196;
													v78[v197] = v196[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v78[v197](v78[v197 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v196 = v78[v80[3]];
													v78[v197 + 1] = v196;
													v78[v197] = v196[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v78[v197] = v78[v197](v13(v78, v197 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = {};
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v80[4];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v78[v197] = v78[v197](v13(v78, v197 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v196 = v78[v80[3]];
													v78[v197 + 1] = v196;
													v78[v197] = v196[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v78[v197](v78[v197 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v196 = v78[v80[3]];
													v78[v197 + 1] = v196;
													v78[v197] = v196[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v193, v195 = v71(v78[v197](v78[v197 + 1]));
													v73 = (v195 + v197) - 1;
													v194 = 0;
													for v716 = v197, v73 do
														local v717 = 0;
														while true do
															if (v717 == 0) then
																v194 = v194 + 1;
																v78[v716] = v193[v194];
																break;
															end
														end
													end
													v72 = v72 + 1;
													v80 = v68[v72];
													v197 = v80[2];
													v193 = {v78[v197](v13(v78, v197 + 1, v73))};
													v194 = 0;
													for v718 = v197, v80[4] do
														v194 = v194 + 1;
														v78[v718] = v193[v194];
													end
													v72 = v72 + 1;
													v80 = v68[v72];
													v72 = v80[3];
												end
											elseif (v81 == 5) then
												v78[v80[2]] = v29(v69[v80[3]], nil, v62);
											elseif (v78[v80[2]] == v80[4]) then
												v72 = v72 + 1;
											else
												v72 = v80[3];
											end
										elseif (v81 <= 9) then
											if (v81 <= 7) then
												local v118 = 0;
												local v119;
												local v120;
												local v121;
												while true do
													if (v118 == 1) then
														v121 = v78[v119 + 2];
														if (v121 > 0) then
															if (v120 > v78[v119 + 1]) then
																v72 = v80[3];
															else
																v78[v119 + 3] = v120;
															end
														elseif (v120 < v78[v119 + 1]) then
															v72 = v80[3];
														else
															v78[v119 + 3] = v120;
														end
														break;
													end
													if (v118 == 0) then
														v119 = v80[2];
														v120 = v78[v119];
														v118 = 1;
													end
												end
											elseif (v81 > 8) then
												local v212;
												local v213;
												v213 = v80[2];
												v212 = v78[v80[3]];
												v78[v213 + 1] = v212;
												v78[v213] = v212[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v213 = v80[2];
												v78[v213] = v78[v213](v13(v78, v213 + 1, v80[3]));
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v78[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v72 = v80[3];
											else
												local v226 = 0;
												local v227;
												while true do
													if (v226 == 0) then
														v227 = v80[2];
														do
															return v13(v78, v227, v227 + v80[3]);
														end
														break;
													end
												end
											end
										elseif (v81 <= 11) then
											if (v81 > 10) then
												do
													return;
												end
											else
												local v228 = 0;
												local v229;
												while true do
													if (v228 == 0) then
														v229 = v80[2];
														v78[v229](v13(v78, v229 + 1, v80[3]));
														break;
													end
												end
											end
										elseif (v81 > 12) then
											v78[v80[2]]();
										else
											local v230;
											local v231;
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v231 = v80[2];
											v78[v231](v78[v231 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v231 = v80[2];
											v230 = v78[v80[3]];
											v78[v231 + 1] = v230;
											v78[v231] = v230[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v231 = v80[2];
											v78[v231] = v78[v231](v13(v78, v231 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = {};
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]][v80[3]] = v80[4];
											v72 = v72 + 1;
											v80 = v68[v72];
											v231 = v80[2];
											v78[v231] = v78[v231](v13(v78, v231 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v231 = v80[2];
											v230 = v78[v80[3]];
											v78[v231 + 1] = v230;
											v78[v231] = v230[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v231 = v80[2];
											v78[v231](v78[v231 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
										end
									elseif (v81 <= 20) then
										if (v81 <= 16) then
											if (v81 <= 14) then
												local v122 = 0;
												local v123;
												local v124;
												local v125;
												local v126;
												local v127;
												while true do
													if (v122 == 9) then
														v127 = v80[2];
														v78[v127] = v78[v127]();
														v72 = v72 + 1;
														v80 = v68[v72];
														v122 = 10;
													end
													if (v122 == 7) then
														v123 = 0;
														for v814 = v127, v73 do
															local v815 = 0;
															while true do
																if (v815 == 0) then
																	v123 = v123 + 1;
																	v78[v814] = v124[v123];
																	break;
																end
															end
														end
														v72 = v72 + 1;
														v80 = v68[v72];
														v122 = 8;
													end
													if (v122 == 3) then
														v80 = v68[v72];
														v78[v80[2]] = v62[v80[3]];
														v72 = v72 + 1;
														v80 = v68[v72];
														v122 = 4;
													end
													if (v122 == 2) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = v62[v80[3]];
														v72 = v72 + 1;
														v122 = 3;
													end
													if (v122 == 1) then
														v62[v80[3]] = v78[v80[2]];
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = {};
														v122 = 2;
													end
													if (v122 == 0) then
														v123 = nil;
														v124, v125 = nil;
														v126 = nil;
														v127 = nil;
														v122 = 1;
													end
													if (v122 == 6) then
														v80 = v68[v72];
														v127 = v80[2];
														v124, v125 = v71(v78[v127](v13(v78, v127 + 1, v80[3])));
														v73 = (v125 + v127) - 1;
														v122 = 7;
													end
													if (v122 == 5) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = v80[3];
														v72 = v72 + 1;
														v122 = 6;
													end
													if (v122 == 8) then
														v127 = v80[2];
														v78[v127] = v78[v127](v13(v78, v127 + 1, v73));
														v72 = v72 + 1;
														v80 = v68[v72];
														v122 = 9;
													end
													if (v122 == 4) then
														v127 = v80[2];
														v126 = v78[v80[3]];
														v78[v127 + 1] = v126;
														v78[v127] = v126[v80[4]];
														v122 = 5;
													end
													if (v122 == 10) then
														v78[v80[2]][v80[3]] = v78[v80[4]];
														break;
													end
												end
											elseif (v81 == 15) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
											else
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = {};
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v78[v80[4]];
											end
										elseif (v81 <= 18) then
											if (v81 == 17) then
												local v255 = 0;
												local v256;
												while true do
													if (v255 == 0) then
														v256 = v78[v80[4]];
														if not v256 then
															v72 = v72 + 1;
														else
															local v1923 = 0;
															while true do
																if (v1923 == 0) then
																	v78[v80[2]] = v256;
																	v72 = v80[3];
																	break;
																end
															end
														end
														break;
													end
												end
											elseif v78[v80[2]] then
												v72 = v72 + 1;
											else
												v72 = v80[3];
											end
										elseif (v81 > 19) then
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]][v80[3]] = v78[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											do
												return;
											end
										else
											local v263 = 0;
											local v264;
											local v265;
											local v266;
											while true do
												if (v263 == 1) then
													v266 = v80[3];
													for v1881 = 1, v266 do
														v265[v1881] = v78[v264 + v1881];
													end
													break;
												end
												if (v263 == 0) then
													v264 = v80[2];
													v265 = v78[v264];
													v263 = 1;
												end
											end
										end
									elseif (v81 <= 23) then
										if (v81 <= 21) then
											local v128 = 0;
											local v129;
											local v130;
											local v131;
											local v132;
											while true do
												if (v128 == 1) then
													v73 = (v131 + v129) - 1;
													v132 = 0;
													v128 = 2;
												end
												if (v128 == 0) then
													v129 = v80[2];
													v130, v131 = v71(v78[v129](v13(v78, v129 + 1, v80[3])));
													v128 = 1;
												end
												if (v128 == 2) then
													for v817 = v129, v73 do
														v132 = v132 + 1;
														v78[v817] = v130[v132];
													end
													break;
												end
											end
										elseif (v81 == 22) then
											local v267;
											local v268;
											v268 = v80[2];
											v267 = v78[v80[3]];
											v78[v268 + 1] = v267;
											v78[v268] = v267[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v268 = v80[2];
											v78[v268] = v78[v268](v13(v78, v268 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]] * v80[4];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v268 = v80[2];
											v78[v268] = v78[v268](v13(v78, v268 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v72 = v80[3];
										else
											local v279;
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v279 = v80[2];
											v78[v279] = v78[v279](v78[v279 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]][v80[3]] = v80[4];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
										end
									elseif (v81 <= 25) then
										if (v81 == 24) then
											local v289 = 0;
											local v290;
											local v291;
											while true do
												if (5 == v289) then
													v290 = v78[v80[3]];
													v78[v291 + 1] = v290;
													v78[v291] = v290[v80[4]];
													v72 = v72 + 1;
													v289 = 6;
												end
												if (v289 == 1) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v289 = 2;
												end
												if (4 == v289) then
													v78[v291](v78[v291 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v291 = v80[2];
													v289 = 5;
												end
												if (v289 == 3) then
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v291 = v80[2];
													v289 = 4;
												end
												if (v289 == 2) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v289 = 3;
												end
												if (v289 == 6) then
													v80 = v68[v72];
													v291 = v80[2];
													v78[v291](v78[v291 + 1]);
													v72 = v72 + 1;
													v289 = 7;
												end
												if (v289 == 7) then
													v80 = v68[v72];
													v72 = v80[3];
													break;
												end
												if (v289 == 0) then
													v290 = nil;
													v291 = nil;
													v291 = v80[2];
													v78[v291](v78[v291 + 1]);
													v289 = 1;
												end
											end
										else
											local v292;
											local v293;
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v293 = v80[2];
											v78[v293](v78[v293 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v293 = v80[2];
											v292 = v78[v80[3]];
											v78[v293 + 1] = v292;
											v78[v293] = v292[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v293 = v80[2];
											v78[v293] = v78[v293](v13(v78, v293 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = {};
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]][v80[3]] = v80[4];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]][v80[3]] = v80[4];
											v72 = v72 + 1;
											v80 = v68[v72];
											v293 = v80[2];
											v78[v293] = v78[v293](v13(v78, v293 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v293 = v80[2];
											v292 = v78[v80[3]];
											v78[v293 + 1] = v292;
											v78[v293] = v292[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v293 = v80[2];
											v78[v293](v78[v293 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v72 = v80[3];
										end
									elseif (v81 > 26) then
										local v307;
										local v308;
										v308 = v80[2];
										v307 = v78[v80[3]];
										v78[v308 + 1] = v307;
										v78[v308] = v307[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v308 = v80[2];
										v78[v308] = v78[v308](v13(v78, v308 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = {};
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v308 = v80[2];
										v78[v308] = v78[v308](v13(v78, v308 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]] - v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]][v80[3]] = v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v308 = v80[2];
										v78[v308] = v78[v308](v13(v78, v308 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v308 = v80[2];
										v307 = v78[v80[3]];
										v78[v308 + 1] = v307;
										v78[v308] = v307[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v308 = v80[2];
										v78[v308](v78[v308 + 1]);
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v72 = v80[3];
									else
										local v322;
										local v323;
										v323 = v80[2];
										v322 = v78[v80[3]];
										v78[v323 + 1] = v322;
										v78[v323] = v322[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v323 = v80[2];
										v78[v323] = v78[v323](v13(v78, v323 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
									end
								elseif (v81 <= 41) then
									if (v81 <= 34) then
										if (v81 <= 30) then
											if (v81 <= 28) then
												local v133 = v80[3];
												local v134 = v78[v133];
												for v178 = v133 + 1, v80[4] do
													v134 = v134 .. v78[v178];
												end
												v78[v80[2]] = v134;
											elseif (v81 > 29) then
												local v334 = 0;
												local v335;
												local v336;
												local v337;
												while true do
													if (v334 == 1) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = v78[v80[3]][v80[4]];
														v72 = v72 + 1;
														v334 = 2;
													end
													if (v334 == 3) then
														v78[v80[2]] = {};
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = v61[v80[3]];
														v334 = 4;
													end
													if (0 == v334) then
														v335 = nil;
														v336 = nil;
														v337 = nil;
														v78[v80[2]] = v78[v80[3]][v80[4]];
														v334 = 1;
													end
													if (v334 == 4) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = v78[v80[3]];
														v72 = v72 + 1;
														v334 = 5;
													end
													if (v334 == 5) then
														v80 = v68[v72];
														v337 = v80[2];
														v336 = v78[v337];
														v335 = v80[3];
														v334 = 6;
													end
													if (v334 == 2) then
														v80 = v68[v72];
														v78[v80[2]][v80[3]] = v78[v80[4]];
														v72 = v72 + 1;
														v80 = v68[v72];
														v334 = 3;
													end
													if (v334 == 6) then
														for v1884 = 1, v335 do
															v336[v1884] = v78[v337 + v1884];
														end
														break;
													end
												end
											else
												local v338 = v80[2];
												local v339 = v80[4];
												local v340 = v338 + 2;
												local v341 = {v78[v338](v78[v338 + 1], v78[v340])};
												for v753 = 1, v339 do
													v78[v340 + v753] = v341[v753];
												end
												local v342 = v341[1];
												if v342 then
													v78[v340] = v342;
													v72 = v80[3];
												else
													v72 = v72 + 1;
												end
											end
										elseif (v81 <= 32) then
											if (v81 > 31) then
												v78[v80[2]] = {};
											elseif (v80[2] == v78[v80[4]]) then
												v72 = v72 + 1;
											else
												v72 = v80[3];
											end
										elseif (v81 == 33) then
											local v344;
											local v345;
											v345 = v80[2];
											v344 = v78[v80[3]];
											v78[v345 + 1] = v344;
											v78[v345] = v344[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v345 = v80[2];
											v78[v345] = v78[v345](v13(v78, v345 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = {};
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]][v80[3]] = v78[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v345 = v80[2];
											v78[v345] = v78[v345](v13(v78, v345 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v345 = v80[2];
											v344 = v78[v80[3]];
											v78[v345 + 1] = v344;
											v78[v345] = v344[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v345 = v80[2];
											v78[v345](v78[v345 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v345 = v80[2];
											v78[v345](v78[v345 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v72 = v80[3];
										else
											v62[v80[3]] = v78[v80[2]];
										end
									elseif (v81 <= 37) then
										if (v81 <= 35) then
											v72 = v80[3];
										elseif (v81 == 36) then
											local v361 = 0;
											while true do
												if (v361 == 3) then
													v78[v80[2]] = v80[3] ~= 0;
													v72 = v72 + 1;
													v80 = v68[v72];
													v361 = 4;
												end
												if (v361 == 4) then
													v61[v80[3]] = v78[v80[2]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v361 = 5;
												end
												if (v361 == 5) then
													v78[v80[2]] = v80[3];
													break;
												end
												if (1 == v361) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v361 = 2;
												end
												if (v361 == 2) then
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v361 = 3;
												end
												if (v361 == 0) then
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v361 = 1;
												end
											end
										else
											local v362 = 0;
											local v363;
											while true do
												if (v362 == 0) then
													v363 = v80[2];
													v78[v363] = v78[v363](v13(v78, v363 + 1, v80[3]));
													break;
												end
											end
										end
									elseif (v81 <= 39) then
										if (v81 > 38) then
											v78[v80[2]][v80[3]] = v80[4];
										else
											local v366 = 0;
											local v367;
											while true do
												if (v366 == 6) then
													v78[v367](v78[v367 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v366 = 7;
												end
												if (v366 == 0) then
													v367 = nil;
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v366 = 1;
												end
												if (v366 == 5) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v367 = v80[2];
													v366 = 6;
												end
												if (v366 == 7) then
													v72 = v80[3];
													break;
												end
												if (v366 == 3) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v366 = 4;
												end
												if (v366 == 1) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3] ~= 0;
													v72 = v72 + 1;
													v366 = 2;
												end
												if (v366 == 2) then
													v80 = v68[v72];
													v367 = v80[2];
													v78[v367](v13(v78, v367 + 1, v80[3]));
													v366 = 3;
												end
												if (v366 == 4) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]];
													v366 = 5;
												end
											end
										end
									elseif (v81 > 40) then
										local v368 = 0;
										local v369;
										while true do
											if (0 == v368) then
												v369 = v80[2];
												v78[v369] = v78[v369](v78[v369 + 1]);
												break;
											end
										end
									else
										local v370 = v69[v80[3]];
										local v371;
										local v372 = {};
										v371 = v10({}, {__index=function(v756, v757)
											local v758 = 0;
											local v759;
											while true do
												if (v758 == 0) then
													v759 = v372[v757];
													return v759[1][v759[2]];
												end
											end
										end,__newindex=function(v760, v761, v762)
											local v763 = v372[v761];
											v763[1][v763[2]] = v762;
										end});
										for v765 = 1, v80[4] do
											local v766 = 0;
											local v767;
											while true do
												if (v766 == 1) then
													if (v767[1] == 3) then
														v372[v765 - 1] = {v78,v767[3]};
													else
														v372[v765 - 1] = {v61,v767[3]};
													end
													v77[#v77 + 1] = v372;
													break;
												end
												if (v766 == 0) then
													v72 = v72 + 1;
													v767 = v68[v72];
													v766 = 1;
												end
											end
										end
										v78[v80[2]] = v29(v370, v371, v62);
									end
								elseif (v81 <= 48) then
									if (v81 <= 44) then
										if (v81 <= 42) then
											v78[v80[2]] = v80[3] ~= 0;
										elseif (v81 == 43) then
											local v374 = 0;
											local v375;
											local v376;
											while true do
												if (v374 == 5) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v374 = 6;
												end
												if (v374 == 3) then
													v78[v80[2]] = v78[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v374 = 4;
												end
												if (v374 == 1) then
													v78[v376 + 1] = v375;
													v78[v376] = v375[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v374 = 2;
												end
												if (v374 == 6) then
													if v78[v80[2]] then
														v72 = v72 + 1;
													else
														v72 = v80[3];
													end
													break;
												end
												if (v374 == 0) then
													v375 = nil;
													v376 = nil;
													v376 = v80[2];
													v375 = v78[v80[3]];
													v374 = 1;
												end
												if (v374 == 2) then
													v376 = v80[2];
													v78[v376] = v78[v376](v78[v376 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v374 = 3;
												end
												if (v374 == 4) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v374 = 5;
												end
											end
										else
											local v377 = 0;
											local v378;
											local v379;
											while true do
												if (v377 == 2) then
													v379 = v80[2];
													v378 = v78[v80[3]];
													v78[v379 + 1] = v378;
													v78[v379] = v378[v80[4]];
													v377 = 3;
												end
												if (v377 == 5) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v377 = 6;
												end
												if (0 == v377) then
													v378 = nil;
													v379 = nil;
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v377 = 1;
												end
												if (v377 == 9) then
													v72 = v80[3];
													break;
												end
												if (v377 == 1) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v377 = 2;
												end
												if (v377 == 8) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v377 = 9;
												end
												if (4 == v377) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v377 = 5;
												end
												if (v377 == 7) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v377 = 8;
												end
												if (v377 == 3) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v379 = v80[2];
													v78[v379](v78[v379 + 1]);
													v377 = 4;
												end
												if (6 == v377) then
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v377 = 7;
												end
											end
										end
									elseif (v81 <= 46) then
										if (v81 == 45) then
											local v380 = 0;
											local v381;
											while true do
												if (v380 == 3) then
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v381 = v80[2];
													v380 = 4;
												end
												if (v380 == 6) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v380 = 7;
												end
												if (v380 == 1) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v380 = 2;
												end
												if (v380 == 11) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v380 = 12;
												end
												if (22 == v380) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v380 = 23;
												end
												if (v380 == 4) then
													v78[v381] = v78[v381](v13(v78, v381 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v380 = 5;
												end
												if (24 == v380) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v380 = 25;
												end
												if (v380 == 15) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v380 = 16;
												end
												if (v380 == 13) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]] * v80[4];
													v380 = 14;
												end
												if (v380 == 16) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v380 = 17;
												end
												if (v380 == 12) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v380 = 13;
												end
												if (v380 == 20) then
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v381 = v80[2];
													v78[v381] = v78[v381](v13(v78, v381 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
													v380 = 21;
												end
												if (v380 == 14) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v381 = v80[2];
													v78[v381] = v78[v381](v13(v78, v381 + 1, v80[3]));
													v72 = v72 + 1;
													v380 = 15;
												end
												if (v380 == 9) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v381 = v80[2];
													v78[v381] = v78[v381](v13(v78, v381 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
													v72 = v72 + 1;
													v380 = 10;
												end
												if (10 == v380) then
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v380 = 11;
												end
												if (v380 == 25) then
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v380 = 26;
												end
												if (5 == v380) then
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v380 = 6;
												end
												if (v380 == 27) then
													v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													do
														return;
													end
													break;
												end
												if (v380 == 17) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v380 = 18;
												end
												if (v380 == 21) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v380 = 22;
												end
												if (v380 == 0) then
													v381 = nil;
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v380 = 1;
												end
												if (18 == v380) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v380 = 19;
												end
												if (v380 == 23) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v380 = 24;
												end
												if (v380 == 7) then
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v380 = 8;
												end
												if (v380 == 26) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v381 = v80[2];
													v78[v381] = v78[v381](v13(v78, v381 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v380 = 27;
												end
												if (v380 == 8) then
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = -v78[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v380 = 9;
												end
												if (v380 == 19) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = -v78[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]] * v80[4];
													v72 = v72 + 1;
													v80 = v68[v72];
													v380 = 20;
												end
												if (v380 == 2) then
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v380 = 3;
												end
											end
										else
											local v382;
											local v383;
											v383 = v80[2];
											v382 = v78[v80[3]];
											v78[v383 + 1] = v382;
											v78[v383] = v382[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v383 = v80[2];
											v78[v383] = v78[v383](v13(v78, v383 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v383 = v80[2];
											v382 = v78[v80[3]];
											v78[v383 + 1] = v382;
											v78[v383] = v382[v80[4]];
										end
									elseif (v81 == 47) then
										v78[v80[2]] = v78[v80[3]] * v80[4];
									else
										local v394 = 0;
										while true do
											if (v394 == 4) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												break;
											end
											if (1 == v394) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v394 = 2;
											end
											if (v394 == 3) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v80[4];
												v394 = 4;
											end
											if (v394 == 0) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v394 = 1;
											end
											if (v394 == 2) then
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v394 = 3;
											end
										end
									end
								elseif (v81 <= 52) then
									if (v81 <= 50) then
										if (v81 == 49) then
											local v395;
											local v396;
											v396 = v80[2];
											v78[v396](v78[v396 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v396 = v80[2];
											v395 = v78[v80[3]];
											v78[v396 + 1] = v395;
											v78[v396] = v395[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v396 = v80[2];
											v78[v396] = v78[v396](v13(v78, v396 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = {};
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v396 = v80[2];
											v78[v396] = v78[v396](v13(v78, v396 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]] - v78[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]][v80[3]] = v78[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v396 = v80[2];
											v78[v396] = v78[v396](v13(v78, v396 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v396 = v80[2];
											v395 = v78[v80[3]];
											v78[v396 + 1] = v395;
											v78[v396] = v395[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v396 = v80[2];
											v78[v396](v78[v396 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v72 = v80[3];
										else
											v78[v80[2]] = v80[3];
										end
									elseif (v81 == 51) then
										local v412 = v80[2];
										v78[v412](v78[v412 + 1]);
									else
										local v413;
										local v414;
										v414 = v80[2];
										v413 = v78[v80[3]];
										v78[v414 + 1] = v413;
										v78[v414] = v413[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v78[v414] = v78[v414](v13(v78, v414 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = {};
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]] * v80[4];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]][v80[3]] = v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v78[v414] = v78[v414](v13(v78, v414 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v413 = v78[v80[3]];
										v78[v414 + 1] = v413;
										v78[v414] = v413[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v78[v414](v78[v414 + 1]);
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v413 = v78[v80[3]];
										v78[v414 + 1] = v413;
										v78[v414] = v413[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v78[v414] = v78[v414](v13(v78, v414 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = {};
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]][v80[3]] = v80[4];
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v78[v414] = v78[v414](v13(v78, v414 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v413 = v78[v80[3]];
										v78[v414 + 1] = v413;
										v78[v414] = v413[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v414 = v80[2];
										v78[v414](v78[v414 + 1]);
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
									end
								elseif (v81 <= 54) then
									if (v81 == 53) then
										local v429 = 0;
										local v430;
										while true do
											if (v429 == 3) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]];
												v72 = v72 + 1;
												v429 = 4;
											end
											if (5 == v429) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v429 = 6;
											end
											if (v429 == 0) then
												v430 = nil;
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v429 = 1;
											end
											if (6 == v429) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												break;
											end
											if (v429 == 4) then
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v429 = 5;
											end
											if (v429 == 2) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v430 = v80[2];
												v78[v430] = v78[v430](v78[v430 + 1]);
												v429 = 3;
											end
											if (v429 == 1) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v429 = 2;
											end
										end
									elseif (v78[v80[2]] < v78[v80[4]]) then
										v72 = v72 + 1;
									else
										v72 = v80[3];
									end
								elseif (v81 == 55) then
									local v431 = 0;
									local v432;
									local v433;
									local v434;
									while true do
										if (v431 == 0) then
											v432 = v80[2];
											v433 = v78[v432 + 2];
											v431 = 1;
										end
										if (v431 == 1) then
											v434 = v78[v432] + v433;
											v78[v432] = v434;
											v431 = 2;
										end
										if (v431 == 2) then
											if (v433 > 0) then
												if (v434 <= v78[v432 + 1]) then
													v72 = v80[3];
													v78[v432 + 3] = v434;
												end
											elseif (v434 >= v78[v432 + 1]) then
												local v1938 = 0;
												while true do
													if (v1938 == 0) then
														v72 = v80[3];
														v78[v432 + 3] = v434;
														break;
													end
												end
											end
											break;
										end
									end
								else
									local v435 = 0;
									local v436;
									local v437;
									while true do
										if (1 == v435) then
											v78[v437 + 1] = v436;
											v78[v437] = v436[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v435 = 2;
										end
										if (4 == v435) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v435 = 5;
										end
										if (v435 == 2) then
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v437 = v80[2];
											v435 = 3;
										end
										if (v435 == 6) then
											v72 = v80[3];
											break;
										end
										if (v435 == 5) then
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v435 = 6;
										end
										if (0 == v435) then
											v436 = nil;
											v437 = nil;
											v437 = v80[2];
											v436 = v78[v80[3]];
											v435 = 1;
										end
										if (3 == v435) then
											v78[v437] = v78[v437](v13(v78, v437 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v435 = 4;
										end
									end
								end
							elseif (v81 <= 84) then
								if (v81 <= 70) then
									if (v81 <= 63) then
										if (v81 <= 59) then
											if (v81 <= 57) then
												local v138;
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v138 = v80[2];
												v78[v138] = v78[v138](v78[v138 + 1]);
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v72 = v80[3];
											elseif (v81 == 58) then
												local v438 = 0;
												local v439;
												local v440;
												while true do
													if (6 == v438) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v440 = v80[2];
														v438 = 7;
													end
													if (v438 == 4) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = v78[v80[3]][v80[4]];
														v438 = 5;
													end
													if (v438 == 3) then
														v439 = v78[v80[3]];
														v78[v440 + 1] = v439;
														v78[v440] = v439[v80[4]];
														v438 = 4;
													end
													if (v438 == 9) then
														if (v78[v80[2]] < v78[v80[4]]) then
															v72 = v72 + 1;
														else
															v72 = v80[3];
														end
														break;
													end
													if (7 == v438) then
														v78[v440] = v78[v440](v13(v78, v440 + 1, v80[3]));
														v72 = v72 + 1;
														v80 = v68[v72];
														v438 = 8;
													end
													if (2 == v438) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v440 = v80[2];
														v438 = 3;
													end
													if (v438 == 0) then
														v439 = nil;
														v440 = nil;
														v78[v80[2]] = v78[v80[3]][v80[4]];
														v438 = 1;
													end
													if (v438 == 1) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = v78[v80[3]][v80[4]];
														v438 = 2;
													end
													if (v438 == 8) then
														v78[v80[2]] = v78[v80[3]];
														v72 = v72 + 1;
														v80 = v68[v72];
														v438 = 9;
													end
													if (v438 == 5) then
														v72 = v72 + 1;
														v80 = v68[v72];
														v78[v80[2]] = v78[v80[3]][v80[4]];
														v438 = 6;
													end
												end
											else
												v78[v80[2]] = v78[v80[3]] - v78[v80[4]];
											end
										elseif (v81 <= 61) then
											if (v81 == 60) then
												v61[v80[3]] = v78[v80[2]];
											else
												v78[v80[2]] = v62[v80[3]];
											end
										elseif (v81 > 62) then
											v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
										else
											local v447 = 0;
											local v448;
											local v449;
											while true do
												if (v447 == 3) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v447 = 4;
												end
												if (8 == v447) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v449 = v80[2];
													v78[v449] = v78[v449](v13(v78, v449 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]] - v78[v80[4]];
													v447 = 9;
												end
												if (v447 == 7) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v447 = 8;
												end
												if (v447 == 5) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v449 = v80[2];
													v78[v449] = v78[v449](v13(v78, v449 + 1, v80[3]));
													v72 = v72 + 1;
													v447 = 6;
												end
												if (v447 == 6) then
													v80 = v68[v72];
													v78[v80[2]] = {};
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v447 = 7;
												end
												if (v447 == 4) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v447 = 5;
												end
												if (v447 == 2) then
													v78[v449] = v448[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v447 = 3;
												end
												if (v447 == 11) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v72 = v80[3];
													break;
												end
												if (v447 == 9) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v449 = v80[2];
													v78[v449] = v78[v449](v13(v78, v449 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v447 = 10;
												end
												if (v447 == 0) then
													v448 = nil;
													v449 = nil;
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v449 = v80[2];
													v447 = 1;
												end
												if (v447 == 1) then
													v78[v449](v78[v449 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v449 = v80[2];
													v448 = v78[v80[3]];
													v78[v449 + 1] = v448;
													v447 = 2;
												end
												if (v447 == 10) then
													v449 = v80[2];
													v448 = v78[v80[3]];
													v78[v449 + 1] = v448;
													v78[v449] = v448[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v449 = v80[2];
													v78[v449](v78[v449 + 1]);
													v72 = v72 + 1;
													v447 = 11;
												end
											end
										end
									elseif (v81 <= 66) then
										if (v81 <= 64) then
											v78[v80[2]] = -v78[v80[3]];
										elseif (v81 > 65) then
											local v450 = 0;
											local v451;
											local v452;
											while true do
												if (v450 == 4) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v450 = 5;
												end
												if (v450 == 2) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v450 = 3;
												end
												if (v450 == 3) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v450 = 4;
												end
												if (v450 == 1) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v450 = 2;
												end
												if (v450 == 0) then
													v451 = nil;
													v452 = nil;
													v452 = v80[2];
													v451 = v78[v80[3]];
													v78[v452 + 1] = v451;
													v78[v452] = v451[v80[4]];
													v450 = 1;
												end
												if (v450 == 6) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v452 = v80[2];
													v78[v452] = v78[v452](v13(v78, v452 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v450 = 7;
												end
												if (7 == v450) then
													v78[v80[2]] = {};
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v80[4];
													v72 = v72 + 1;
													v80 = v68[v72];
													v450 = 8;
												end
												if (v450 == 10) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v72 = v80[3];
													break;
												end
												if (8 == v450) then
													v452 = v80[2];
													v78[v452] = v78[v452](v13(v78, v452 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v452 = v80[2];
													v451 = v78[v80[3]];
													v450 = 9;
												end
												if (v450 == 5) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v450 = 6;
												end
												if (v450 == 9) then
													v78[v452 + 1] = v451;
													v78[v452] = v451[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v452 = v80[2];
													v78[v452](v78[v452 + 1]);
													v450 = 10;
												end
											end
										else
											local v453 = 0;
											local v454;
											local v455;
											while true do
												if (v453 == 1) then
													v78[v455 + 1] = v454;
													v78[v455] = v454[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v453 = 2;
												end
												if (5 == v453) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													break;
												end
												if (v453 == 3) then
													v78[v80[2]] = v78[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v453 = 4;
												end
												if (v453 == 4) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v78[v80[4]];
													v72 = v72 + 1;
													v453 = 5;
												end
												if (v453 == 0) then
													v454 = nil;
													v455 = nil;
													v455 = v80[2];
													v454 = v78[v80[3]];
													v453 = 1;
												end
												if (v453 == 2) then
													v455 = v80[2];
													v78[v455] = v78[v455](v78[v455 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v453 = 3;
												end
											end
										end
									elseif (v81 <= 68) then
										if (v81 > 67) then
											local v456 = 0;
											local v457;
											local v458;
											while true do
												if (v456 == 3) then
													v78[v458] = v457[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v456 = 4;
												end
												if (v456 == 4) then
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v456 = 5;
												end
												if (v456 == 6) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													break;
												end
												if (v456 == 1) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v458 = v80[2];
													v78[v458](v78[v458 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v456 = 2;
												end
												if (v456 == 5) then
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v458 = v80[2];
													v78[v458](v13(v78, v458 + 1, v80[3]));
													v72 = v72 + 1;
													v456 = 6;
												end
												if (v456 == 0) then
													v457 = nil;
													v458 = nil;
													v458 = v80[2];
													v457 = v78[v80[3]];
													v78[v458 + 1] = v457;
													v78[v458] = v457[v80[4]];
													v456 = 1;
												end
												if (v456 == 2) then
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v458 = v80[2];
													v457 = v78[v80[3]];
													v78[v458 + 1] = v457;
													v456 = 3;
												end
											end
										else
											local v459 = 0;
											local v460;
											local v461;
											while true do
												if (v459 == 1) then
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v459 = 2;
												end
												if (2 == v459) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v459 = 3;
												end
												if (v459 == 5) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v461 = v80[2];
													v78[v461] = v78[v461](v13(v78, v461 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v459 = 6;
												end
												if (v459 == 3) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v459 = 4;
												end
												if (v459 == 4) then
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v459 = 5;
												end
												if (v459 == 7) then
													v78[v461] = v78[v461](v13(v78, v461 + 1, v80[3]));
													v72 = v72 + 1;
													v80 = v68[v72];
													v461 = v80[2];
													v460 = v78[v80[3]];
													v78[v461 + 1] = v460;
													v78[v461] = v460[v80[4]];
													v459 = 8;
												end
												if (v459 == 6) then
													v78[v80[2]] = {};
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]][v80[3]] = v80[4];
													v72 = v72 + 1;
													v80 = v68[v72];
													v461 = v80[2];
													v459 = 7;
												end
												if (v459 == 8) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v461 = v80[2];
													v78[v461](v78[v461 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v72 = v80[3];
													break;
												end
												if (v459 == 0) then
													v460 = nil;
													v461 = nil;
													v461 = v80[2];
													v460 = v78[v80[3]];
													v78[v461 + 1] = v460;
													v78[v461] = v460[v80[4]];
													v72 = v72 + 1;
													v459 = 1;
												end
											end
										end
									elseif (v81 == 69) then
										if not v78[v80[2]] then
											v72 = v72 + 1;
										else
											v72 = v80[3];
										end
									else
										local v462;
										local v463;
										v78[v80[2]][v80[3]] = v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v463 = v80[3];
										v462 = v78[v463];
										for v768 = v463 + 1, v80[4] do
											v462 = v462 .. v78[v768];
										end
										v78[v80[2]] = v462;
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]][v80[3]] = v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v72 = v80[3];
									end
								elseif (v81 <= 77) then
									if (v81 <= 73) then
										if (v81 <= 71) then
											local v147 = 0;
											local v148;
											local v149;
											while true do
												if (v147 == 0) then
													v148 = v80[2];
													v149 = v78[v148];
													v147 = 1;
												end
												if (1 == v147) then
													for v825 = v148 + 1, v80[3] do
														v7(v149, v78[v825]);
													end
													break;
												end
											end
										elseif (v81 == 72) then
											local v471 = 0;
											local v472;
											local v473;
											local v474;
											local v475;
											local v476;
											while true do
												if (v471 == 3) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v476 = v80[2];
													v472, v474 = v71(v78[v476](v78[v476 + 1]));
													v471 = 4;
												end
												if (v471 == 1) then
													v476 = nil;
													v78[v80[2]] = v61[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v471 = 2;
												end
												if (v471 == 5) then
													v80 = v68[v72];
													v476 = v80[2];
													v472 = {v78[v476](v13(v78, v476 + 1, v73))};
													v473 = 0;
													v471 = 6;
												end
												if (v471 == 2) then
													v476 = v80[2];
													v475 = v78[v80[3]];
													v78[v476 + 1] = v475;
													v78[v476] = v475[v80[4]];
													v471 = 3;
												end
												if (4 == v471) then
													v73 = (v474 + v476) - 1;
													v473 = 0;
													for v1890 = v476, v73 do
														v473 = v473 + 1;
														v78[v1890] = v472[v473];
													end
													v72 = v72 + 1;
													v471 = 5;
												end
												if (6 == v471) then
													for v1893 = v476, v80[4] do
														local v1894 = 0;
														while true do
															if (v1894 == 0) then
																v473 = v473 + 1;
																v78[v1893] = v472[v473];
																break;
															end
														end
													end
													v72 = v72 + 1;
													v80 = v68[v72];
													v72 = v80[3];
													break;
												end
												if (0 == v471) then
													v472 = nil;
													v473 = nil;
													v472, v474 = nil;
													v475 = nil;
													v471 = 1;
												end
											end
										else
											local v477;
											local v478;
											local v477, v479;
											local v480;
											local v481;
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v481 = v80[2];
											v480 = v78[v80[3]];
											v78[v481 + 1] = v480;
											v78[v481] = v480[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v481 = v80[2];
											v477, v479 = v71(v78[v481](v78[v481 + 1]));
											v73 = (v479 + v481) - 1;
											v478 = 0;
											for v771 = v481, v73 do
												local v772 = 0;
												while true do
													if (v772 == 0) then
														v478 = v478 + 1;
														v78[v771] = v477[v478];
														break;
													end
												end
											end
											v72 = v72 + 1;
											v80 = v68[v72];
											v481 = v80[2];
											v477 = {v78[v481](v13(v78, v481 + 1, v73))};
											v478 = 0;
											for v773 = v481, v80[4] do
												local v774 = 0;
												while true do
													if (0 == v774) then
														v478 = v478 + 1;
														v78[v773] = v477[v478];
														break;
													end
												end
											end
											v72 = v72 + 1;
											v80 = v68[v72];
											v72 = v80[3];
										end
									elseif (v81 <= 75) then
										if (v81 > 74) then
											local v491;
											local v492;
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v492 = v80[2];
											v491 = v78[v80[3]];
											v78[v492 + 1] = v491;
											v78[v492] = v491[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v492 = v80[2];
											v78[v492](v13(v78, v492 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
										else
											v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
										end
									elseif (v81 > 76) then
										local v503 = 0;
										while true do
											if (v503 == 4) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v503 = 5;
											end
											if (v503 == 0) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v503 = 1;
											end
											if (v503 == 6) then
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v503 = 7;
											end
											if (v503 == 5) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v503 = 6;
											end
											if (v503 == 8) then
												v72 = v80[3];
												break;
											end
											if (v503 == 2) then
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v503 = 3;
											end
											if (v503 == 3) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v503 = 4;
											end
											if (v503 == 1) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v503 = 2;
											end
											if (v503 == 7) then
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v503 = 8;
											end
										end
									else
										for v775 = v80[2], v80[3] do
											v78[v775] = nil;
										end
									end
								elseif (v81 <= 80) then
									if (v81 <= 78) then
										v78[v80[2]] = v61[v80[3]];
									elseif (v81 == 79) then
										local v504;
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v504 = v80[2];
										v78[v504] = v78[v504](v13(v78, v504 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
									else
										local v512 = 0;
										local v513;
										local v514;
										local v515;
										local v516;
										local v517;
										while true do
											if (v512 == 2) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v517 = v80[2];
												v512 = 3;
											end
											if (v512 == 0) then
												v513 = nil;
												v514 = nil;
												v513, v515 = nil;
												v516 = nil;
												v517 = nil;
												v78[v80[2]] = v62[v80[3]];
												v512 = 1;
											end
											if (5 == v512) then
												v517 = v80[2];
												v513 = {v78[v517](v13(v78, v517 + 1, v73))};
												v514 = 0;
												for v1899 = v517, v80[4] do
													v514 = v514 + 1;
													v78[v1899] = v513[v514];
												end
												v72 = v72 + 1;
												v80 = v68[v72];
												v512 = 6;
											end
											if (v512 == 6) then
												v72 = v80[3];
												break;
											end
											if (v512 == 3) then
												v516 = v78[v80[3]];
												v78[v517 + 1] = v516;
												v78[v517] = v516[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v517 = v80[2];
												v512 = 4;
											end
											if (1 == v512) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v512 = 2;
											end
											if (v512 == 4) then
												v513, v515 = v71(v78[v517](v78[v517 + 1]));
												v73 = (v515 + v517) - 1;
												v514 = 0;
												for v1902 = v517, v73 do
													local v1903 = 0;
													while true do
														if (v1903 == 0) then
															v514 = v514 + 1;
															v78[v1902] = v513[v514];
															break;
														end
													end
												end
												v72 = v72 + 1;
												v80 = v68[v72];
												v512 = 5;
											end
										end
									end
								elseif (v81 <= 82) then
									if (v81 == 81) then
										local v518 = 0;
										local v519;
										while true do
											if (v518 == 0) then
												v519 = v80[2];
												v78[v519] = v78[v519]();
												break;
											end
										end
									else
										local v520 = 0;
										local v521;
										local v522;
										local v523;
										local v524;
										local v525;
										while true do
											if (v520 == 5) then
												for v1904 = v525, v73 do
													v522 = v522 + 1;
													v78[v1904] = v521[v522];
												end
												v72 = v72 + 1;
												v80 = v68[v72];
												v525 = v80[2];
												v521 = {v78[v525](v13(v78, v525 + 1, v73))};
												v522 = 0;
												v520 = 6;
											end
											if (v520 == 2) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v520 = 3;
											end
											if (v520 == 6) then
												for v1907 = v525, v80[4] do
													v522 = v522 + 1;
													v78[v1907] = v521[v522];
												end
												v72 = v72 + 1;
												v80 = v68[v72];
												v72 = v80[3];
												break;
											end
											if (v520 == 0) then
												v521 = nil;
												v522 = nil;
												v521, v523 = nil;
												v524 = nil;
												v525 = nil;
												v78[v80[2]] = v62[v80[3]];
												v520 = 1;
											end
											if (v520 == 4) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v525 = v80[2];
												v521, v523 = v71(v78[v525](v78[v525 + 1]));
												v73 = (v523 + v525) - 1;
												v522 = 0;
												v520 = 5;
											end
											if (v520 == 1) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												for v1910 = v80[2], v80[3] do
													v78[v1910] = nil;
												end
												v520 = 2;
											end
											if (v520 == 3) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v525 = v80[2];
												v524 = v78[v80[3]];
												v78[v525 + 1] = v524;
												v78[v525] = v524[v80[4]];
												v520 = 4;
											end
										end
									end
								elseif (v81 > 83) then
									local v526 = v80[2];
									local v527 = v78[v80[3]];
									v78[v526 + 1] = v527;
									v78[v526] = v527[v80[4]];
								else
									local v531;
									local v532;
									v532 = v80[2];
									v531 = v78[v80[3]];
									v78[v532 + 1] = v531;
									v78[v532] = v531[v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v532 = v80[2];
									v78[v532] = v78[v532](v13(v78, v532 + 1, v80[3]));
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v78[v80[3]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
								end
							elseif (v81 <= 98) then
								if (v81 <= 91) then
									if (v81 <= 87) then
										if (v81 <= 85) then
											local v152 = 0;
											local v153;
											local v154;
											local v155;
											local v156;
											while true do
												if (v152 == 2) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v156 = v80[2];
													v152 = 3;
												end
												if (v152 == 4) then
													v78[v80[2]] = v78[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v152 = 5;
												end
												if (v152 == 5) then
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v72 = v80[3];
													break;
												end
												if (v152 == 1) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v156 = v80[2];
													v78[v156](v78[v156 + 1]);
													v152 = 2;
												end
												if (v152 == 0) then
													v153 = nil;
													v154 = nil;
													v155 = nil;
													v156 = nil;
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v152 = 1;
												end
												if (v152 == 3) then
													v155 = {v78[v156]()};
													v154 = v80[4];
													v153 = 0;
													for v826 = v156, v154 do
														local v827 = 0;
														while true do
															if (v827 == 0) then
																v153 = v153 + 1;
																v78[v826] = v155[v153];
																break;
															end
														end
													end
													v72 = v72 + 1;
													v80 = v68[v72];
													v152 = 4;
												end
											end
										elseif (v81 > 86) then
											local v541;
											local v542;
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v542 = v80[2];
											v78[v542](v78[v542 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v542 = v80[2];
											v541 = v78[v80[3]];
											v78[v542 + 1] = v541;
											v78[v542] = v541[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v542 = v80[2];
											v78[v542](v78[v542 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v542 = v80[2];
											v541 = v78[v80[3]];
											v78[v542 + 1] = v541;
											v78[v542] = v541[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v542 = v80[2];
											v78[v542](v78[v542 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v72 = v80[3];
										else
											local v553 = 0;
											local v554;
											local v555;
											while true do
												if (v553 == 3) then
													v78[v555] = v554[v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v555 = v80[2];
													v553 = 4;
												end
												if (v553 == 5) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v72 = v80[3];
													break;
												end
												if (v553 == 2) then
													v80 = v68[v72];
													v555 = v80[2];
													v554 = v78[v80[3]];
													v78[v555 + 1] = v554;
													v553 = 3;
												end
												if (v553 == 4) then
													v78[v555](v78[v555 + 1]);
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v553 = 5;
												end
												if (v553 == 1) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]];
													v72 = v72 + 1;
													v553 = 2;
												end
												if (0 == v553) then
													v554 = nil;
													v555 = nil;
													v555 = v80[2];
													v78[v555] = v78[v555](v13(v78, v555 + 1, v80[3]));
													v553 = 1;
												end
											end
										end
									elseif (v81 <= 89) then
										if (v81 == 88) then
											local v556 = 0;
											local v557;
											while true do
												if (v556 == 0) then
													v557 = nil;
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v556 = 1;
												end
												if (v556 == 5) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v556 = 6;
												end
												if (v556 == 6) then
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v72 = v72 + 1;
													v80 = v68[v72];
													v556 = 7;
												end
												if (v556 == 2) then
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v556 = 3;
												end
												if (v556 == 3) then
													v80 = v68[v72];
													v78[v80[2]] = v62[v80[3]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v556 = 4;
												end
												if (v556 == 1) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v556 = 2;
												end
												if (v556 == 7) then
													v557 = v80[2];
													v78[v557] = v78[v557](v13(v78, v557 + 1, v80[3]));
													break;
												end
												if (v556 == 4) then
													v78[v80[2]] = v78[v80[3]][v80[4]];
													v72 = v72 + 1;
													v80 = v68[v72];
													v78[v80[2]] = v80[3];
													v556 = 5;
												end
											end
										else
											local v558;
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v558 = v80[2];
											v78[v558] = v78[v558](v78[v558 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v558 = v80[2];
											v78[v558] = v78[v558](v78[v558 + 1]);
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
										end
									elseif (v81 > 90) then
										local v567 = 0;
										local v568;
										local v569;
										local v570;
										local v571;
										while true do
											if (v567 == 1) then
												v73 = (v570 + v568) - 1;
												v571 = 0;
												v567 = 2;
											end
											if (v567 == 2) then
												for v1912 = v568, v73 do
													local v1913 = 0;
													while true do
														if (v1913 == 0) then
															v571 = v571 + 1;
															v78[v1912] = v569[v571];
															break;
														end
													end
												end
												break;
											end
											if (v567 == 0) then
												v568 = v80[2];
												v569, v570 = v71(v78[v568](v78[v568 + 1]));
												v567 = 1;
											end
										end
									else
										local v572;
										local v573;
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v573 = v80[2];
										v78[v573] = v78[v573](v13(v78, v573 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]][v80[3]] = v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v573 = v80[2];
										v572 = v78[v80[3]];
										v78[v573 + 1] = v572;
										v78[v573] = v572[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v573 = v80[2];
										v78[v573] = v78[v573](v13(v78, v573 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v573 = v80[2];
										v78[v573] = v78[v573](v13(v78, v573 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v573 = v80[2];
										v78[v573](v13(v78, v573 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v72 = v80[3];
									end
								elseif (v81 <= 94) then
									if (v81 <= 92) then
										local v157 = 0;
										local v158;
										local v159;
										local v160;
										local v161;
										while true do
											if (v157 == 0) then
												v158 = v80[2];
												v159 = {v78[v158]()};
												v157 = 1;
											end
											if (v157 == 2) then
												for v828 = v158, v160 do
													local v829 = 0;
													while true do
														if (v829 == 0) then
															v161 = v161 + 1;
															v78[v828] = v159[v161];
															break;
														end
													end
												end
												break;
											end
											if (v157 == 1) then
												v160 = v80[4];
												v161 = 0;
												v157 = 2;
											end
										end
									elseif (v81 > 93) then
										local v586 = 0;
										local v587;
										local v588;
										while true do
											if (v586 == 3) then
												v78[v80[2]] = v61[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v586 = 4;
											end
											if (v586 == 4) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v586 = 5;
											end
											if (v586 == 6) then
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v586 = 7;
											end
											if (1 == v586) then
												v80 = v68[v72];
												v588 = v80[2];
												v78[v588](v78[v588 + 1]);
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v61[v80[3]];
												v72 = v72 + 1;
												v586 = 2;
											end
											if (v586 == 8) then
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v588 = v80[2];
												v78[v588] = v78[v588](v13(v78, v588 + 1, v80[3]));
												v72 = v72 + 1;
												v586 = 9;
											end
											if (v586 == 12) then
												v78[v588](v78[v588 + 1]);
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												break;
											end
											if (v586 == 10) then
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v588 = v80[2];
												v78[v588] = v78[v588](v13(v78, v588 + 1, v80[3]));
												v72 = v72 + 1;
												v80 = v68[v72];
												v586 = 11;
											end
											if (v586 == 11) then
												v588 = v80[2];
												v587 = v78[v80[3]];
												v78[v588 + 1] = v587;
												v78[v588] = v587[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v588 = v80[2];
												v586 = 12;
											end
											if (v586 == 0) then
												v587 = nil;
												v588 = nil;
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v586 = 1;
											end
											if (v586 == 2) then
												v80 = v68[v72];
												v588 = v80[2];
												v587 = v78[v80[3]];
												v78[v588 + 1] = v587;
												v78[v588] = v587[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v586 = 3;
											end
											if (v586 == 9) then
												v80 = v68[v72];
												v78[v80[2]] = {};
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v586 = 10;
											end
											if (v586 == 7) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v586 = 8;
											end
											if (v586 == 5) then
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v586 = 6;
											end
										end
									else
										local v589;
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v589 = v80[2];
										v78[v589](v78[v589 + 1]);
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										if (v78[v80[2]] == v80[4]) then
											v72 = v72 + 1;
										else
											v72 = v80[3];
										end
									end
								elseif (v81 <= 96) then
									if (v81 > 95) then
										local v596;
										local v597;
										v78[v80[2]] = v80[3] ~= 0;
										v72 = v72 + 1;
										v80 = v68[v72];
										v61[v80[3]] = v78[v80[2]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v597 = v80[2];
										v596 = v78[v80[3]];
										v78[v597 + 1] = v596;
										v78[v597] = v596[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3] ~= 0;
										v72 = v72 + 1;
										v80 = v68[v72];
										v597 = v80[2];
										v78[v597](v13(v78, v597 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										do
											return;
										end
									else
										local v607 = 0;
										local v608;
										local v609;
										while true do
											if (v607 == 5) then
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v607 = 6;
											end
											if (10 == v607) then
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v609 = v80[2];
												v78[v609] = v78[v609](v13(v78, v609 + 1, v80[3]));
												v72 = v72 + 1;
												v80 = v68[v72];
												v607 = 11;
											end
											if (3 == v607) then
												v78[v609](v13(v78, v609 + 1, v80[3]));
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v61[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v609 = v80[2];
												v607 = 4;
											end
											if (v607 == 2) then
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v609 = v80[2];
												v607 = 3;
											end
											if (v607 == 9) then
												v609 = v80[2];
												v78[v609] = v78[v609](v13(v78, v609 + 1, v80[3]));
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = {};
												v72 = v72 + 1;
												v80 = v68[v72];
												v607 = 10;
											end
											if (v607 == 4) then
												v608 = v78[v80[3]];
												v78[v609 + 1] = v608;
												v78[v609] = v608[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]];
												v72 = v72 + 1;
												v607 = 5;
											end
											if (v607 == 8) then
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v607 = 9;
											end
											if (7 == v607) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v607 = 8;
											end
											if (v607 == 6) then
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v607 = 7;
											end
											if (v607 == 0) then
												v608 = nil;
												v609 = nil;
												v609 = v80[2];
												v608 = v78[v80[3]];
												v78[v609 + 1] = v608;
												v78[v609] = v608[v80[4]];
												v72 = v72 + 1;
												v607 = 1;
											end
											if (v607 == 1) then
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v607 = 2;
											end
											if (v607 == 11) then
												v609 = v80[2];
												v608 = v78[v80[3]];
												v78[v609 + 1] = v608;
												v78[v609] = v608[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v609 = v80[2];
												v607 = 12;
											end
											if (12 == v607) then
												v78[v609](v78[v609 + 1]);
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												break;
											end
										end
									end
								elseif (v81 == 97) then
									local v610;
									local v611, v612;
									local v613;
									local v614;
									v78[v80[2]] = v78[v80[3]][v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v61[v80[3]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v614 = v80[2];
									v613 = v78[v80[3]];
									v78[v614 + 1] = v613;
									v78[v614] = v613[v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v614 = v80[2];
									v611, v612 = v71(v78[v614](v13(v78, v614 + 1, v80[3])));
									v73 = (v612 + v614) - 1;
									v610 = 0;
									for v797 = v614, v73 do
										v610 = v610 + 1;
										v78[v797] = v611[v610];
									end
									v72 = v72 + 1;
									v80 = v68[v72];
									v614 = v80[2];
									v78[v614](v13(v78, v614 + 1, v73));
								else
									local v625 = 0;
									local v626;
									local v627;
									while true do
										if (v625 == 6) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v627 = v80[2];
											v78[v627] = v78[v627](v13(v78, v627 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v625 = 7;
										end
										if (v625 == 4) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v625 = 5;
										end
										if (v625 == 9) then
											v78[v627 + 1] = v626;
											v78[v627] = v626[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v627 = v80[2];
											v78[v627](v78[v627 + 1]);
											v625 = 10;
										end
										if (v625 == 7) then
											v78[v80[2]] = {};
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]][v80[3]] = v80[4];
											v72 = v72 + 1;
											v80 = v68[v72];
											v625 = 8;
										end
										if (v625 == 1) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v61[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v625 = 2;
										end
										if (v625 == 8) then
											v627 = v80[2];
											v78[v627] = v78[v627](v13(v78, v627 + 1, v80[3]));
											v72 = v72 + 1;
											v80 = v68[v72];
											v627 = v80[2];
											v626 = v78[v80[3]];
											v625 = 9;
										end
										if (v625 == 2) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3];
											v625 = 3;
										end
										if (0 == v625) then
											v626 = nil;
											v627 = nil;
											v627 = v80[2];
											v626 = v78[v80[3]];
											v78[v627 + 1] = v626;
											v78[v627] = v626[v80[4]];
											v625 = 1;
										end
										if (3 == v625) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v62[v80[3]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v625 = 4;
										end
										if (v625 == 5) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v78[v80[3]][v80[4]];
											v625 = 6;
										end
										if (v625 == 10) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v72 = v80[3];
											break;
										end
									end
								end
							elseif (v81 <= 105) then
								if (v81 <= 101) then
									if (v81 <= 99) then
										local v162;
										local v163;
										v163 = v80[2];
										v162 = v78[v80[3]];
										v78[v163 + 1] = v162;
										v78[v163] = v162[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v163 = v80[2];
										v78[v163] = v78[v163](v13(v78, v163 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = {};
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]][v80[3]] = v80[4];
										v72 = v72 + 1;
										v80 = v68[v72];
										v163 = v80[2];
										v78[v163] = v78[v163](v13(v78, v163 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v163 = v80[2];
										v162 = v78[v80[3]];
										v78[v163 + 1] = v162;
										v78[v163] = v162[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v163 = v80[2];
										v78[v163](v78[v163 + 1]);
									elseif (v81 == 100) then
										local v628;
										local v629;
										local v628, v630;
										local v631;
										local v632;
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v632 = v80[2];
										v631 = v78[v80[3]];
										v78[v632 + 1] = v631;
										v78[v632] = v631[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v632 = v80[2];
										v628, v630 = v71(v78[v632](v78[v632 + 1]));
										v73 = (v630 + v632) - 1;
										v629 = 0;
										for v800 = v632, v73 do
											v629 = v629 + 1;
											v78[v800] = v628[v629];
										end
										v72 = v72 + 1;
										v80 = v68[v72];
										v632 = v80[2];
										v628 = {v78[v632](v13(v78, v632 + 1, v73))};
										v629 = 0;
										for v803 = v632, v80[4] do
											v629 = v629 + 1;
											v78[v803] = v628[v629];
										end
										v72 = v72 + 1;
										v80 = v68[v72];
										v72 = v80[3];
									else
										local v642;
										local v643;
										v61[v80[3]] = v78[v80[2]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v643 = v80[2];
										v642 = v78[v80[3]];
										v78[v643 + 1] = v642;
										v78[v643] = v642[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v643 = v80[2];
										v78[v643](v78[v643 + 1]);
										v72 = v72 + 1;
										v80 = v68[v72];
										v72 = v80[3];
									end
								elseif (v81 <= 103) then
									if (v81 > 102) then
										v78[v80[2]][v80[3]] = v78[v80[4]];
									else
										local v655 = v80[2];
										local v656 = {v78[v655](v13(v78, v655 + 1, v73))};
										local v657 = 0;
										for v806 = v655, v80[4] do
											v657 = v657 + 1;
											v78[v806] = v656[v657];
										end
									end
								elseif (v81 == 104) then
									local v658 = v80[2];
									local v659 = {};
									for v809 = 1, #v77 do
										local v810 = 0;
										local v811;
										while true do
											if (0 == v810) then
												v811 = v77[v809];
												for v1930 = 0, #v811 do
													local v1931 = v811[v1930];
													local v1932 = v1931[1];
													local v1933 = v1931[2];
													if ((v1932 == v78) and (v1933 >= v658)) then
														local v1945 = 0;
														while true do
															if (0 == v1945) then
																v659[v1933] = v1932[v1933];
																v1931[1] = v659;
																break;
															end
														end
													end
												end
												break;
											end
										end
									end
								elseif (v78[v80[2]] ~= v80[4]) then
									v72 = v72 + 1;
								else
									v72 = v80[3];
								end
							elseif (v81 <= 109) then
								if (v81 <= 107) then
									if (v81 > 106) then
										local v660 = 0;
										local v661;
										local v662;
										while true do
											if (v660 == 3) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v660 = 4;
											end
											if (v660 == 11) then
												v72 = v80[3];
												break;
											end
											if (v660 == 0) then
												v661 = nil;
												v662 = nil;
												v662 = v80[2];
												v661 = v78[v80[3]];
												v78[v662 + 1] = v661;
												v78[v662] = v661[v80[4]];
												v72 = v72 + 1;
												v660 = 1;
											end
											if (v660 == 1) then
												v80 = v68[v72];
												v78[v80[2]] = v61[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v660 = 2;
											end
											if (8 == v660) then
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v80 = v68[v72];
												v662 = v80[2];
												v78[v662] = v78[v662](v13(v78, v662 + 1, v80[3]));
												v72 = v72 + 1;
												v660 = 9;
											end
											if (v660 == 2) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v660 = 3;
											end
											if (v660 == 4) then
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v660 = 5;
											end
											if (v660 == 7) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = {};
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v80[4];
												v72 = v72 + 1;
												v660 = 8;
											end
											if (v660 == 9) then
												v80 = v68[v72];
												v662 = v80[2];
												v661 = v78[v80[3]];
												v78[v662 + 1] = v661;
												v78[v662] = v661[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v660 = 10;
											end
											if (v660 == 10) then
												v662 = v80[2];
												v78[v662](v78[v662 + 1]);
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v660 = 11;
											end
											if (v660 == 6) then
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v662 = v80[2];
												v78[v662] = v78[v662](v13(v78, v662 + 1, v80[3]));
												v660 = 7;
											end
											if (v660 == 5) then
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v660 = 6;
											end
										end
									else
										local v663 = 0;
										local v664;
										local v665;
										local v666;
										local v667;
										local v668;
										while true do
											if (v663 == 3) then
												v73 = (v666 + v668) - 1;
												v664 = 0;
												for v1915 = v668, v73 do
													local v1916 = 0;
													while true do
														if (v1916 == 0) then
															v664 = v664 + 1;
															v78[v1915] = v665[v664];
															break;
														end
													end
												end
												v72 = v72 + 1;
												v80 = v68[v72];
												v668 = v80[2];
												v663 = 4;
											end
											if (v663 == 6) then
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]][v80[4]];
												break;
											end
											if (v663 == 2) then
												v80 = v68[v72];
												v78[v80[2]] = v80[3];
												v72 = v72 + 1;
												v80 = v68[v72];
												v668 = v80[2];
												v665, v666 = v71(v78[v668](v13(v78, v668 + 1, v80[3])));
												v663 = 3;
											end
											if (v663 == 4) then
												v78[v668] = v78[v668](v13(v78, v668 + 1, v73));
												v72 = v72 + 1;
												v80 = v68[v72];
												v668 = v80[2];
												v78[v668] = v78[v668]();
												v72 = v72 + 1;
												v663 = 5;
											end
											if (v663 == 0) then
												v664 = nil;
												v665, v666 = nil;
												v667 = nil;
												v668 = nil;
												v78[v80[2]] = v62[v80[3]];
												v72 = v72 + 1;
												v663 = 1;
											end
											if (v663 == 1) then
												v80 = v68[v72];
												v668 = v80[2];
												v667 = v78[v80[3]];
												v78[v668 + 1] = v667;
												v78[v668] = v667[v80[4]];
												v72 = v72 + 1;
												v663 = 2;
											end
											if (v663 == 5) then
												v80 = v68[v72];
												v78[v80[2]][v80[3]] = v78[v80[4]];
												v72 = v72 + 1;
												v80 = v68[v72];
												v78[v80[2]] = v78[v80[3]];
												v72 = v72 + 1;
												v663 = 6;
											end
										end
									end
								elseif (v81 > 108) then
									local v669;
									local v670;
									v670 = v80[2];
									v669 = v78[v80[3]];
									v78[v670 + 1] = v669;
									v78[v670] = v669[v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v670 = v80[2];
									v78[v670](v13(v78, v670 + 1, v80[3]));
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v61[v80[3]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v78[v80[3]][v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v78[v80[3]][v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v78[v80[3]][v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v670 = v80[2];
									v669 = v78[v80[3]];
									v78[v670 + 1] = v669;
									v78[v670] = v669[v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v670 = v80[2];
									v78[v670](v13(v78, v670 + 1, v80[3]));
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
								else
									local v681;
									local v682;
									v682 = v80[2];
									v681 = v78[v80[3]];
									v78[v682 + 1] = v681;
									v78[v682] = v681[v80[4]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v682 = v80[2];
									v78[v682](v78[v682 + 1]);
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v62[v80[3]];
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v80[3];
									v72 = v72 + 1;
									v80 = v68[v72];
									v682 = v80[2];
									v78[v682](v78[v682 + 1]);
									v72 = v72 + 1;
									v80 = v68[v72];
									v78[v80[2]] = v61[v80[3]];
									v72 = v72 + 1;
									v80 = v68[v72];
									if v78[v80[2]] then
										v72 = v72 + 1;
									else
										v72 = v80[3];
									end
								end
							elseif (v81 <= 111) then
								if (v81 > 110) then
									local v693 = 0;
									local v694;
									local v695;
									while true do
										if (v693 == 2) then
											v78[v80[2]] = v80[3];
											v72 = v72 + 1;
											v80 = v68[v72];
											v78[v80[2]] = v80[3] ~= 0;
											v693 = 3;
										end
										if (v693 == 1) then
											v78[v695 + 1] = v694;
											v78[v695] = v694[v80[4]];
											v72 = v72 + 1;
											v80 = v68[v72];
											v693 = 2;
										end
										if (v693 == 4) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v72 = v80[3];
											break;
										end
										if (v693 == 0) then
											v694 = nil;
											v695 = nil;
											v695 = v80[2];
											v694 = v78[v80[3]];
											v693 = 1;
										end
										if (v693 == 3) then
											v72 = v72 + 1;
											v80 = v68[v72];
											v695 = v80[2];
											v78[v695](v13(v78, v695 + 1, v80[3]));
											v693 = 4;
										end
									end
								else
									local v696 = v80[2];
									v78[v696] = v78[v696](v13(v78, v696 + 1, v73));
								end
							elseif (v81 > 112) then
								local v698 = 0;
								local v699;
								local v700;
								while true do
									if (v698 == 14) then
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 15;
									end
									if (v698 == 17) then
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v700 = v80[2];
										v78[v700] = v78[v700](v13(v78, v700 + 1, v80[3]));
										v698 = 18;
									end
									if (v698 == 0) then
										v699 = nil;
										v700 = nil;
										v700 = v80[2];
										v699 = v78[v80[3]];
										v78[v700 + 1] = v699;
										v78[v700] = v699[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v698 = 1;
									end
									if (v698 == 5) then
										v78[v80[2]] = {};
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 6;
									end
									if (v698 == 2) then
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v698 = 3;
									end
									if (v698 == 19) then
										v78[v700] = v78[v700](v13(v78, v700 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v700 = v80[2];
										v699 = v78[v80[3]];
										v78[v700 + 1] = v699;
										v78[v700] = v699[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 20;
									end
									if (1 == v698) then
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v698 = 2;
									end
									if (12 == v698) then
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 13;
									end
									if (v698 == 9) then
										v80 = v68[v72];
										v700 = v80[2];
										v78[v700] = v78[v700](v13(v78, v700 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v700 = v80[2];
										v699 = v78[v80[3]];
										v78[v700 + 1] = v699;
										v78[v700] = v699[v80[4]];
										v698 = 10;
									end
									if (v698 == 15) then
										v700 = v80[2];
										v78[v700] = v78[v700](v13(v78, v700 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = {};
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v698 = 16;
									end
									if (v698 == 13) then
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 14;
									end
									if (v698 == 4) then
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v700 = v80[2];
										v78[v700] = v78[v700](v13(v78, v700 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 5;
									end
									if (v698 == 16) then
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v698 = 17;
									end
									if (v698 == 20) then
										v700 = v80[2];
										v78[v700](v78[v700 + 1]);
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										break;
									end
									if (v698 == 8) then
										v700 = v80[2];
										v78[v700] = v78[v700](v13(v78, v700 + 1, v80[3]));
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]][v80[3]] = v78[v80[4]];
										v72 = v72 + 1;
										v698 = 9;
									end
									if (18 == v698) then
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]][v80[3]] = v78[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v700 = v80[2];
										v698 = 19;
									end
									if (v698 == 3) then
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v698 = 4;
									end
									if (v698 == 11) then
										v700 = v80[2];
										v699 = v78[v80[3]];
										v78[v700 + 1] = v699;
										v78[v700] = v699[v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 12;
									end
									if (v698 == 10) then
										v72 = v72 + 1;
										v80 = v68[v72];
										v700 = v80[2];
										v78[v700](v78[v700 + 1]);
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v61[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 11;
									end
									if (v698 == 6) then
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v62[v80[3]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v78[v80[3]][v80[4]];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 7;
									end
									if (v698 == 7) then
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v78[v80[2]] = v80[3];
										v72 = v72 + 1;
										v80 = v68[v72];
										v698 = 8;
									end
								end
							else
								local v701 = 0;
								local v702;
								while true do
									if (v701 == 0) then
										v702 = v80[2];
										v78[v702](v13(v78, v702 + 1, v73));
										break;
									end
								end
							end
							v72 = v72 + 1;
							break;
						end
					end
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
